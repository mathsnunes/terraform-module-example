# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

orbs:
  go: circleci/go@1.5.0

commands: # a reusable command with parameters
  setup:
    parameters:
      terraform_version:
        default: "0.13.5"
        type: string
      gotestsum_version:
        default: "0.6.0"
        type: string
      
    steps:
      - run:
          name: Setup gotestsum
          command: curl -sSL "https://github.com/gotestyourself/gotestsum/releases/download/v<<parameters.gotestsum_version>>/gotestsum_<<parameters.gotestsum_version>>_linux_amd64.tar.gz" | sudo tar -xz -C /usr/local/bin gotestsum
      - run: 
          name: Setup terraform
          command: |
            wget https://releases.hashicorp.com/terraform/<<parameters.terraform_version>>/terraform_<<parameters.terraform_version>>_linux_amd64.zip
            unzip terraform_<<parameters.terraform_version>>_linux_amd64.zip
            sudo mv terraform /usr/local/bin
            terraform version

jobs:
  test:
    machine: # executor type
      image: ubuntu-2004:202010-01

    environment: # environment variables for the build itself
      TEST_RESULTS: /tmp/test-results # path to where test results will be saved

    steps:
      - checkout
      - setup
      
      - run:
          name: Make test reports dir
          command: mkdir -p $TEST_RESULTS # create the test results directory

      - go/load-cache
      - go/mod-download
      - go/save-cache

      - run:
          name: Run tests
          command: |
            PACKAGE_NAMES=$(go list ./... | circleci tests split --split-by=timings --timings-type=classname)
            gotestsum --format testname --junitfile ${TEST_RESULTS}/gotestsum-report.xml -- $PACKAGE_NAMES

      - go/test:
          covermode: atomic
          failfast: true
          race: true

      - store_artifacts: # upload test summary for display in Artifacts
          path: /tmp/test-results
          destination: raw-test-output

      - store_test_results: # upload test results for display in Test Summary
          path: /tmp/test-results

  release:

    docker:
      - image: circleci/node:10

    steps:
      - checkout
      - run: npm install
      # Run optional required steps before releasing
      # - run: npm run build-script
      - run: npx semantic-release

workflows:
  test:
    jobs:
      - test:
          context:
            - terraform-modules
          filters:
            branches:
              ignore: /main/
  
  release:
    jobs:
      - test:
          context:
            - terraform-modules
          filters: &filters
            branches:
              only: /main/
      - wait-approval:
          type: approval
          requires:
            - test
          context:
            - terraform-modules
          filters:
            <<: *filters
      - release:
          requires:
            - wait-approval
          context:
            - terraform-modules
          filters:
            <<: *filters
